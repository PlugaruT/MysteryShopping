# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-31 12:59
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import model_utils.fields
import mptt.fields
import mystery_shopping.tenants.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CrossIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'default_related_name': 'cross_indexes',
            },
        ),
        migrations.CreateModel(
            name='CrossIndexQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('cross_index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.CrossIndex')),
            ],
        ),
        migrations.CreateModel(
            name='CrossIndexQuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'default_related_name': 'cross_index_question_templates',
            },
        ),
        migrations.CreateModel(
            name='CrossIndexTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
            ],
            options={
                'default_related_name': 'cross_index_templates',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('m', 'Mystery Questionnaire'), ('c', 'Customer Experience Index Questionnaire')], default='m', max_length=1)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('weight', models.PositiveSmallIntegerField(default=100)),
            ],
            options={
                'default_related_name': 'questionnaires',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('order', models.PositiveIntegerField()),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent_block', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='questionnaires.QuestionnaireBlock')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='questionnaires.Questionnaire')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_body', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('t', 'Text Field'), ('d', 'Date Field'), ('s', 'Single Choice'), ('m', 'Multiple Choice'), ('i', 'Indicator Question')], default='t', max_length=1)),
                ('max_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('show_comment', models.BooleanField(default=True)),
                ('additional_info', models.CharField(blank=mystery_shopping.tenants.models.Tenant, max_length=30)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('answer_choices', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireBlock')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.Questionnaire')),
            ],
            options={
                'default_related_name': 'questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireQuestionChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, null=True)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('order', models.PositiveIntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireQuestion')),
            ],
            options={
                'default_related_name': 'question_choices',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('m', 'Mystery Questionnaire'), ('c', 'Customer Experience Index Questionnaire')], default='m', max_length=1)),
                ('description', models.TextField()),
                ('is_editable', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.Tenant')),
            ],
            options={
                'abstract': False,
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireTemplateBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('order', models.PositiveIntegerField()),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent_block', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='questionnaires.QuestionnaireTemplateBlock')),
                ('questionnaire_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='template_blocks', to='questionnaires.QuestionnaireTemplate')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='QuestionnaireTemplateQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_body', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('t', 'Text Field'), ('d', 'Date Field'), ('s', 'Single Choice'), ('m', 'Multiple Choice'), ('i', 'Indicator Question')], default='t', max_length=1)),
                ('max_score', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('show_comment', models.BooleanField(default=True)),
                ('additional_info', models.CharField(blank=mystery_shopping.tenants.models.Tenant, max_length=30)),
                ('questionnaire_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplate')),
                ('template_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplateBlock')),
            ],
            options={
                'default_related_name': 'template_questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireTemplateQuestionChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255, null=True)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('order', models.PositiveIntegerField()),
                ('template_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplateQuestion')),
            ],
            options={
                'default_related_name': 'template_question_choices',
            },
        ),
        migrations.AddField(
            model_name='questionnairequestion',
            name='template_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplateQuestion'),
        ),
        migrations.AddField(
            model_name='questionnaireblock',
            name='template_block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='questionnaires.QuestionnaireTemplateBlock'),
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplate'),
        ),
        migrations.AddField(
            model_name='crossindextemplate',
            name='question_templates',
            field=models.ManyToManyField(through='questionnaires.CrossIndexQuestionTemplate', to='questionnaires.QuestionnaireTemplateQuestion'),
        ),
        migrations.AddField(
            model_name='crossindextemplate',
            name='questionnaire_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplate'),
        ),
        migrations.AddField(
            model_name='crossindexquestiontemplate',
            name='cross_index_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.CrossIndexTemplate'),
        ),
        migrations.AddField(
            model_name='crossindexquestiontemplate',
            name='question_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireTemplateQuestion'),
        ),
        migrations.AddField(
            model_name='crossindexquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.QuestionnaireQuestion'),
        ),
        migrations.AddField(
            model_name='crossindex',
            name='cross_index_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.CrossIndexTemplate'),
        ),
        migrations.AddField(
            model_name='crossindex',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaires.Questionnaire'),
        ),
        migrations.AddField(
            model_name='crossindex',
            name='questions',
            field=models.ManyToManyField(through='questionnaires.CrossIndexQuestion', to='questionnaires.QuestionnaireQuestion'),
        ),
    ]
